#==============================================================================
# ** Game_Battler
#------------------------------------------------------------------------------
#  This class deals with battlers. It's used as a superclass of the Game_Actor
# and Game_Enemy classes.
#==============================================================================

class Game_Battler

  #//////////////////////////////////////////////////////////////////////////
  # * Attributes
  #//////////////////////////////////////////////////////////////////////////
  
  #
  attr_reader :multi_actions
  #
  attr_reader :nbr_actions
  #
  attr_reader :multi_actions_kind
  
  #//////////////////////////////////////////////////////////////////////////
  # * Properties
  #//////////////////////////////////////////////////////////////////////////
  
  #--------------------------------------------------------------------------
  # * 
  #--------------------------------------------------------------------------
  def multi_actions?
    return !@multi_actions.nil?
  end
  
  #--------------------------------------------------------------------------
  # * 
  #--------------------------------------------------------------------------
  def multi_actions_completed?
    return @multi_actions.size == @nbr_actions
  end
  
  #//////////////////////////////////////////////////////////////////////////
  # * Constructor
  #//////////////////////////////////////////////////////////////////////////
  
  #--------------------------------------------------------------------------
  # * Alias initialize
  #--------------------------------------------------------------------------
  alias initialize_bc_multi initialize unless $@
  def initialize
    @multi_actions = nil
    @nbr_actions = 0
    @multi_actions_kind = -1
    initialize_bc_multi
  end
  
  #//////////////////////////////////////////////////////////////////////////
  # * Public Methods
  #//////////////////////////////////////////////////////////////////////////  
  
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def set_multi_actions(nbr)
    @multi_actions = []
    @nbr_actions = nbr
  end
  
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def add_multi_action(action)
    unless in_multi_actions?(action)
      @multi_actions.push(action)
    end
  end
  
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def remove_multi_action(action)
    if in_multi_actions?(action)
      @multi_actions.delete(action)
    end
  end
  
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def in_multi_actions?(action)
    return @multi_actions.include?(action)
  end
  
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def clear_multi_actions
    @multi_actions = nil
    @nbr_actions = 0
    @multi_actions_kind = -1
  end
  
end
